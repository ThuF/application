# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Publish package to the Maven Central Repository

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Apache Maven Central
        uses: actions/setup-java@v1
        with: # running setup-java again overwrites the settings.xml
          java-version: 13
          server-id: maven # Value of the distributionManagement/repository/id field of the pom.xml
          server-username: MAVEN_USERNAME # env variable for username in deploy
          server-password: MAVEN_CENTRAL_TOKEN # env variable for token in deploy
#           gpg-private-key: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }} # Value of the GPG private key to import
          gpg-passphrase: MAVEN_GPG_PASSPHRASE # env variable for GPG private key passphrase

      - name: GPG Setup
        run: |
          echo "${{ secrets.MAVEN_GPG_PRIVATE_KEY }}" > private.asc
          gpg --import --batch private.asc
      - name: Publish to Apache Maven Central
        run: mvn deploy -Dgpg.passphrase=${{ secrets.MAVEN_GPG_PASSPHRASE }}
        env:
          MAVEN_USERNAME: ${{ secrets.MAVEN_USERNAME }}
          MAVEN_CENTRAL_TOKEN: ${{ secrets.MAVEN_PASSWORD }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.MAVEN_GPG_PASSPHRASE }}

#       - name: Set up Maven Central Repository
#         uses: actions/setup-java@v1
#         with:
#           java-version: 13
#           server-id: ossrh
#           server-username: ${{ secrets.MAVEN_USERNAME }}
#           server-password: ${{ secrets.MAVEN_PASSWORD }}
#           gpg-private-key: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }}
#           gpg-passphrase: ${{ secrets.MAVEN_GPG_PASSPHRASE }}
#       - name: Publish package
#         run: |
#           export GPG_TTY=$(tty)
#           mvn --batch-mode deploy
